#!/usr/bin/env bash
# Mes --- Maxwell Equations of Software
# Copyright © 2017,2019 Jan Nieuwenhuizen <janneke@gnu.org>
# Copyright © 2017,2019 Jeremiah Orians
#
# This file is part of Mes.
#
# Mes is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or (at
# your option) any later version.
#
# Mes is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Mes.  If not, see <http://www.gnu.org/licenses/>.

###############################################
# Phase-12 Build M2-Mesoplanet from M2-Planet #
###############################################

${M2} --architecture ${ARCH} \
	-f ${M2LIBC}/sys/types.h \
	-f ${M2LIBC}/stddef.h \
	-f ${M2LIBC}/${ARCH}/linux/fcntl.c \
	-f ${M2LIBC}/${ARCH}/linux/unistd.c \
	-f ${M2LIBC}/${ARCH}/linux/sys/stat.c \
	-f ${M2LIBC}/stdlib.c \
	-f ${M2LIBC}/stdio.c \
	-f ${M2LIBC}/string.c \
	-f ${M2LIBC}/bootstrappable.c \
	-f ${M2MESOPLANET}/cc.h \
	-f ${M2MESOPLANET}/cc_globals.c \
	-f ${M2MESOPLANET}/cc_env.c \
	-f ${M2MESOPLANET}/cc_reader.c \
	-f ${M2MESOPLANET}/cc_spawn.c \
	-f ${M2MESOPLANET}/cc_core.c \
	-f ${M2MESOPLANET}/cc_macro.c \
	-f ${M2MESOPLANET}/cc.c \
	--debug \
	-o ./M2-Mesoplanet-1.M1

${BLOODELF0} ${ENDIAN_FLAG} ${BLOOD_FLAG} -f ./M2-Mesoplanet-1.M1 -o ./M2-Mesoplanet-1-footer.M1

${M1} --architecture ${ARCH} \
	${ENDIAN_FLAG} \
	-f ${M2LIBC}/${ARCH}/${ARCH}_defs.M1 \
	-f ${M2LIBC}/${ARCH}/libc-full.M1 \
	-f ./M2-Mesoplanet-1.M1 \
	-f ./M2-Mesoplanet-1-footer.M1 \
	-o ./M2-Mesoplanet-1.hex2

${HEX2} --architecture ${ARCH} \
	${ENDIAN_FLAG} \
	--base-address ${BASE_ADDRESS} \
	-f ${M2LIBC}/${ARCH}/ELF-${ARCH}-debug.hex2 \
	-f ./M2-Mesoplanet-1.hex2 \
	-o ${M2MESOPLANET_BIN}

#################################################
# Phase-13 Build final blood-elf from C sources #
#################################################

${M2} --architecture ${ARCH} \
	-f ${M2LIBC}/sys/types.h \
	-f ${M2LIBC}/stddef.h \
	-f ${M2LIBC}/${ARCH}/linux/fcntl.c \
	-f ${M2LIBC}/${ARCH}/linux/unistd.c \
	-f ${M2LIBC}/stdlib.c \
	-f ${M2LIBC}/stdio.c \
	-f ${M2LIBC}/bootstrappable.c \
	-f ${MESCCTOOLS}/stringify.c \
	-f ${MESCCTOOLS}/blood-elf.c \
	--debug \
	-o ./blood-elf-1.M1

${BLOODELF0} ${BLOOD_FLAG} ${ENDIAN_FLAG} -f ./blood-elf-1.M1 -o ./blood-elf-1-footer.M1
${M1} --architecture ${ARCH} \
	${ENDIAN_FLAG} \
	-f ${M2LIBC}/${ARCH}/${ARCH}_defs.M1 \
	-f ${M2LIBC}/${ARCH}/libc-full.M1 \
	-f ./blood-elf-1.M1 \
	-f ./blood-elf-1-footer.M1 \
	-o ./blood-elf-1.hex2

${HEX2} --architecture ${ARCH} \
	${ENDIAN_FLAG} \
	--base-address ${BASE_ADDRESS} \
	-f ${M2LIBC}/${ARCH}/ELF-${ARCH}-debug.hex2 \
	-f ./blood-elf-1.hex2 \
	-o ${BLOODELF}

# Now we have our shipping debuggable blood-elf, the rest will be down hill from
# here as we have ALL of the core pieces of compiling and assembling debuggable
# programs in a debuggable form with corresponding C source code.

#############################################
# Phase-14 Build get_machine from C sources #
#############################################

${M2} --architecture ${ARCH} \
	-f ${M2LIBC}/sys/types.h \
	-f ${M2LIBC}/stddef.h \
	-f ${M2LIBC}/${ARCH}/linux/unistd.c \
	-f ${M2LIBC}/${ARCH}/linux/fcntl.c \
	-f ${M2LIBC}/stdlib.c \
	-f ${M2LIBC}/stdio.c \
	-f ${M2LIBC}/bootstrappable.c \
	-f ${MESCCTOOLS}/get_machine.c \
	--debug \
	-o ./get_machine.M1

${BLOODELF} ${BLOOD_FLAG} ${ENDIAN_FLAG} -f ./get_machine.M1 -o ./get_machine-footer.M1

${M1} --architecture ${ARCH} \
	${ENDIAN_FLAG} \
	-f ${M2LIBC}/${ARCH}/${ARCH}_defs.M1 \
	-f ${M2LIBC}/${ARCH}/libc-full.M1 \
	-f ./get_machine.M1 \
	-f ./get_machine-footer.M1 \
	-o ./get_machine.hex2

${HEX2} --architecture ${ARCH} \
	${ENDIAN_FLAG} \
	--base-address ${BASE_ADDRESS} \
	-f ${M2LIBC}/${ARCH}/ELF-${ARCH}-debug.hex2 \
	-f ./get_machine.hex2 \
	-o ${GETMACHINE}

############################################
# Phase-15 Build M2-Planet from M2-Planet  #
############################################

${M2} --architecture ${ARCH} \
	-f ${M2LIBC}/sys/types.h \
	-f ${M2LIBC}/stddef.h \
	-f ${M2LIBC}/${ARCH}/linux/unistd.c \
	-f ${M2LIBC}/${ARCH}/linux/fcntl.c \
	-f ${M2LIBC}/stdlib.c \
	-f ${M2LIBC}/stdio.c \
	-f ${M2LIBC}/bootstrappable.c \
	-f ${M2PLANET}/cc.h \
	-f ${M2PLANET}/cc_globals.c \
	-f ${M2PLANET}/cc_reader.c \
	-f ${M2PLANET}/cc_strings.c \
	-f ${M2PLANET}/cc_types.c \
	-f ${M2PLANET}/cc_core.c \
	-f ${M2PLANET}/cc_macro.c \
	-f ${M2PLANET}/cc.c \
	--debug \
	-o ./M2-1.M1

${BLOODELF} ${ENDIAN_FLAG} ${BLOOD_FLAG} -f ./M2-1.M1 -o ./M2-1-footer.M1

${M1} --architecture ${ARCH} \
	${ENDIAN_FLAG} \
	-f ${M2LIBC}/${ARCH}/${ARCH}_defs.M1 \
	-f ${M2LIBC}/${ARCH}/libc-full.M1 \
	-f ./M2-1.M1 \
	-f ./M2-1-footer.M1 \
	-o ./M2-1.hex2

${HEX2} --architecture ${ARCH} \
	${ENDIAN_FLAG} \
	--base-address ${BASE_ADDRESS} \
	-f ${M2LIBC}/${ARCH}/ELF-${ARCH}-debug.hex2 \
	-f ./M2-1.hex2 \
	-o ${M2PLANET_BIN}
